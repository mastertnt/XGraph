<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:controls="clr-namespace:XGraph.Controls"
                    xmlns:markup="clr-namespace:XGraph.Extensions.Markup"
                    xmlns:xzoomandpan="http://schemas.xzoomandpan.com/winfx/2016/xaml">

    <!-- Including global resources -->
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="/XGraph;Component/Resources/All.xaml" />
    </ResourceDictionary.MergedDictionaries>

    <!-- SimpleGraphView template. -->
    <ControlTemplate x:Key="SimpleGraphViewTemplate" TargetType="{x:Type controls:SimpleGraphView}">
        <Grid x:Name="INNER_RootGrid">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="IsReadOnly">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="INNER_IsReadOnlyLayer" Storyboard.TargetProperty="Visibility">
                                <DiscreteObjectKeyFrame KeyTime="00:00:00" Value="{x:Static Visibility.Visible}"/>
                            </ObjectAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}">
                <Grid>
                    <ScrollViewer x:Name="INNER_ScrollViewer" Focusable="False" Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}" BorderBrush="Transparent" BorderThickness="0" KeyboardNavigation.TabNavigation="{TemplateBinding KeyboardNavigation.TabNavigation}" VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
                        <ItemsPresenter />
                    </ScrollViewer>
                    <Canvas x:Name="PART_InteractionCanvas">
                        <controls:SelectionBox />
                        <controls:ConnectingLine />
                    </Canvas>
                    <Border x:Name="INNER_IsReadOnlyLayer" Background="{StaticResource GraphView_IsReadOnlyLayer_Background_Brush}" Opacity="0.1" Visibility="Collapsed" />
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- SimpleGraphView style. -->
    <Style TargetType="{x:Type controls:SimpleGraphView}" BasedOn="{StaticResource {x:Type ListBox}}">
        <Setter Property="Template" Value="{StaticResource SimpleGraphViewTemplate}" />
        <Setter Property="FontFamily" Value="{StaticResource Segoe_UI_Light_FontFamily}" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property ="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <controls:AdornerLayeredCanvas x:Name="PART_DrawingArea" Background="{StaticResource GraphView_Background_Brush}"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- GraphItemContainer base style. -->
    <Style x:Key="GraphItemContainerBaseStyleKey" TargetType="{x:Type controls:GraphItemContainer}" BasedOn="{StaticResource {x:Type ListBoxItem}}">
        <Setter Property="Canvas.Left" Value="{Binding PosX, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="Canvas.Top" Value="{Binding PosY, RelativeSource={RelativeSource Self}}"/>
        <Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <!-- 
            Adding those two lines to prevent from binding error produced by the WPF listbox.
            See http://stackoverflow.com/questions/3958173/listboxitem-produces-system-windows-data-error-4-binding-error.
        -->
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <Setter Property="VerticalContentAlignment" Value="Stretch" />
        <!-- 
            End of the hook.
        -->
    </Style>

    <!-- GraphItemContainer template when it contains a node. -->
    <ControlTemplate x:Key="GraphItemContainerNodeViewTemplate" TargetType="{x:Type controls:GraphItemContainer}">
        <Grid x:Name="INNER_RootGrid">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected">
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_TemplateControl" Storyboard.TargetProperty="IsSelected" >
                                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False" />
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>                    
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_TemplateControl" Storyboard.TargetProperty="IsSelected" >
                                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True" />
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <controls:NodeView x:Name="PART_TemplateControl" Content="{TemplateBinding Content}" ContentTemplate="{TemplateBinding ContentTemplate}"  />
        </Grid>        
    </ControlTemplate>

    <!-- GraphItemContainer style when it contains a node. -->
    <Style x:Key="GraphItemNodeViewDefaultStyleKey" TargetType="{x:Type controls:GraphItemContainer}" BasedOn="{StaticResource GraphItemContainerBaseStyleKey}">
        <Setter Property="Template" Value="{StaticResource GraphItemContainerNodeViewTemplate}" />
    </Style>

    <!-- GraphItemContainer template when it contains a connection. -->
    <ControlTemplate x:Key="GraphItemContainerConnectionTemplate" TargetType="{x:Type controls:GraphItemContainer}">
        <Grid x:Name="INNER_RootGrid">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualState x:Name="Unselected">
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_TemplateControl" Storyboard.TargetProperty="IsSelected" >
                                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="False" />
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <BooleanAnimationUsingKeyFrames Storyboard.TargetName="PART_TemplateControl" Storyboard.TargetProperty="IsSelected" >
                                <DiscreteBooleanKeyFrame KeyTime="00:00:00" Value="True" />
                            </BooleanAnimationUsingKeyFrames>
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <controls:Connection x:Name="PART_TemplateControl" Content="{TemplateBinding Content}" />
        </Grid>
    </ControlTemplate>

    <!-- GraphItemContainer style when it contains a connection. -->
    <Style x:Key="GraphItemConnectionDefaultStyleKey" TargetType="{x:Type controls:GraphItemContainer}" BasedOn="{StaticResource GraphItemContainerBaseStyleKey}">
        <Setter Property="Template" Value="{StaticResource GraphItemContainerConnectionTemplate}" />
    </Style>

    <!-- Storyboard to execute when a node is selected. -->
    <Storyboard x:Key="NodeSelectedStoryboard">
        <DoubleAnimation Storyboard.TargetName="INNER_SelectedShape" Storyboard.TargetProperty="(UIElement.Opacity)" To="1.0" >
            <DoubleAnimation.EasingFunction>
                <QuinticEase EasingMode="EaseOut" />
            </DoubleAnimation.EasingFunction>
        </DoubleAnimation>
    </Storyboard>

    <!-- NodeView template. -->
    <ControlTemplate x:Key="NodeViewTemplate" TargetType="{x:Type controls:NodeView}">
        <Grid Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.3" To="Selected"/>
                        <VisualTransition From="Selected" GeneratedDuration="0:0:0.3"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="INNER_SelectedShape" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="INNER_BoundingBox">
                <Border.Padding>
                    <MultiBinding Converter="{StaticResource NodeViewPortsCountToBoundingPaddingConverter}">
                        <Binding Path="Content.Ports.Count" RelativeSource="{RelativeSource TemplatedParent}" />
                        <Binding Path="Content.Ports" RelativeSource="{RelativeSource TemplatedParent}" />
                    </MultiBinding>
                </Border.Padding>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="*" />
                        <RowDefinition Height="{markup:GridLength {StaticResource NodeView_Bevel_Size}}" />
                    </Grid.RowDefinitions>
                    <controls:NodeViewShape x:Name="INNER_BackgroundShape" Fill="{TemplateBinding Background}" BevelLength="{StaticResource NodeView_Bevel_Size}" Grid.RowSpan="3" Margin="1"/>
                    <controls:NodeViewShape x:Name="INNER_SelectedShape" Fill="Transparent" BevelLength="{StaticResource NodeView_Bevel_Size}" Stroke="{StaticResource Selection_Border_Brush}" StrokeThickness="1" Grid.RowSpan="3" StrokeDashArray="3 2" Opacity="0.0" />
                    <Grid Margin="0,0,0,3" Grid.Row="0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <controls:MoveThumb Grid.Column="0" x:Name="INNER_Movethumb" VerticalAlignment="Top" />
                        <ContentPresenter Grid.Column="1" ContentTemplate="{TemplateBinding ContentTemplate}" />
                    </Grid>
                    <controls:PortContainer Grid.Row="1" x:Name="PART_PortContainer" Background="{TemplateBinding Background}" />
                </Grid>
            </Border>
        </Grid>
    </ControlTemplate>

    <!-- NodeView style. -->
    <Style TargetType="{x:Type controls:NodeView}">
        <Setter Property="Foreground" Value="{StaticResource NodeView_Foreground_Brush}" />
        <Setter Property="Background" Value="{StaticResource NodeView_Background_Brush}" />
        <Setter Property="Template" Value="{StaticResource NodeViewTemplate}" />
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive}" Value="True" />
                    <Condition Binding="{Binding Path=HasInputBreakpoint}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="HeaderBackground" Value="{StaticResource NodeView_IsSuspendedInputBackground_Brush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive}" Value="True" />
                    <Condition Binding="{Binding Path=HasOuputBreakPoint}" Value="True" />
                </MultiDataTrigger.Conditions>
                <Setter Property="HeaderBackground" Value="{StaticResource NodeView_IsSuspendedInputBackground_Brush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive}" Value="True" />
                    <Condition Binding="{Binding Path=HasInputBreakpoint}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="HeaderBackground" Value="{StaticResource NodeView_IsActiveBackground_Brush}" />
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding Path=IsActive}" Value="True" />
                    <Condition Binding="{Binding Path=HasOuputBreakPoint}" Value="False" />
                </MultiDataTrigger.Conditions>
                <Setter Property="HeaderBackground" Value="{StaticResource NodeView_IsActiveBackground_Brush}" />
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <!-- NodeView default data template for its content. -->
    <DataTemplate x:Key="NodeViewDefaultDataTemplate">
        <StackPanel>
            <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                <Image Source="{Binding IconBreakpointInput}" Width="16" Height="16" Margin="3,0,4,0" />
                <TextBlock Text="{Binding DisplayString}" Margin="0,0,6,0" HorizontalAlignment="Right" FontSize="20" />
                <Image Source="{Binding IconBreakpointOutput}" Width="16" Height="16" Margin="0,0,4,0" />
            </StackPanel>
            <TextBlock Text="{Binding Description}" Margin="0,0,6,0" HorizontalAlignment="Right" FontSize="12" />
        </StackPanel>
    </DataTemplate>

    <!-- PortContainer template. -->
    <ControlTemplate x:Key="PortContainerTemplate" TargetType="{x:Type controls:PortContainer}">
        <controls:PortContainerPanel IsItemsHost="True" />
    </ControlTemplate>

        <!-- PortContainer style. -->
    <Style TargetType="{x:Type controls:PortContainer}" BasedOn="{StaticResource {x:Type ItemsControl}}">
        <Setter Property="Template" Value="{StaticResource PortContainerTemplate}" />
        <Setter Property ="Margin" Value="5" />
    </Style>

    <!-- PortView template. -->
    <ControlTemplate x:Key="PortViewTemplate" TargetType="{x:Type controls:PortView}">
        <Grid Margin="2" Background="{TemplateBinding Background}">
            <Rectangle x:Name="INNER_Border" StrokeDashArray="4 3" Stroke="{TemplateBinding BorderBrush}" StrokeThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="True" />
            <ContentPresenter ContentTemplate="{TemplateBinding ContentTemplate}" VerticalAlignment="Center" HorizontalAlignment="{TemplateBinding Direction, Converter={StaticResource PortDirectionToHorizontalAlignmentConverter}}" Margin="5,0" />
            <controls:AdornedConnectorPresenter x:Name="PART_ConnectorPresenter" Background="{TemplateBinding Background}" />
        </Grid>
    </ControlTemplate>

    <!-- PortView style. -->
    <Style TargetType="{x:Type controls:PortView}">
        <Setter Property="Height" Value="{StaticResource PortView_Default_Height}" />
        <Setter Property="Template" Value="{StaticResource PortViewTemplate}" />
        <Setter Property="BorderBrush" Value="{StaticResource Icon_Foreground_Brush}" />
        <Setter Property="BorderThickness" Value="1" />
    </Style>

    <!-- Input PortView default data template for its content. -->
    <DataTemplate x:Key="InputPortViewDefaultDataTemplate">
        <StackPanel Orientation="Horizontal" >
            <TextBlock Text="{Binding DisplayString}" VerticalAlignment="Center"/>
            <Image Source="{Binding Icon}" Width="16" Height="16" Margin="3,0,0,0" />
        </StackPanel>
    </DataTemplate>

    <!-- Output PortView default data template for its content. -->
    <DataTemplate x:Key="OutputPortViewDefaultDataTemplate">
        <StackPanel Orientation="Horizontal" >
            <Image Source="{Binding Icon}" Width="16" Height="16" Margin="0,0,3,0" />
            <TextBlock Text="{Binding DisplayString}" VerticalAlignment="Center"/>
        </StackPanel>
    </DataTemplate>

    <!-- MoveThumb template. -->
    <ControlTemplate x:Key="MoveThumbTemplate" TargetType="{x:Type controls:MoveThumb}">
        <Grid x:Name="INNER_RootLayout">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.3" To="MouseOver"/>
                        <VisualTransition From="MouseOver" GeneratedDuration="0:0:0.3"/>
                    </VisualStateGroup.Transitions>
                    <VisualState Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="INNER_MainCanvas" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="MouseLeave">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="INNER_MainCanvas" Storyboard.TargetProperty="(UIElement.Opacity)" To="0.5" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Canvas x:Name="INNER_MainCanvas" Opacity="0.5">
                <controls:MoveThumbShape x:Name="INNER_BackgroundShape" Fill="{TemplateBinding Background}" BevelLenght="{TemplateBinding Height}" />
                <Path x:Name="INNER_MoveThumbIcon" Fill="{TemplateBinding Foreground}" SnapsToDevicePixels="True">
                    <Path.Data>
                        <PathGeometry Figures="m 2 18 -2 0 0 -2 2 0 z m 4 -4 -2 0 0 -2 2 0 z m -4 0 -2 0 0 -2 2 0 z m 8 -4 -2 0 0 -2 2 0 z m -4 0 -2 0 0 -2 2 0 z m -4 0 -2 0 0 -2 2 0 z m 12 -4 -2 0 0 -2 2 0 z m -4 0 -2 0 0 -2 2 0 z m -4 0 -2 0 0 -2 2 0 z m -4 0 -2 0 0 -2 2 0 z m 16 -4 -2 0 0 -2 2 0 z m -4 0 -2 0 0 -2 2 0 z m -4 0 -2 0 0 -2 2 0 z m -4 0 -2 0 0 -2 2 0 z m -4 0 -2 0 0 -2 2 0 z" FillRule="NonZero"/>
                    </Path.Data>
                </Path>
            </Canvas>
        </Grid>
    </ControlTemplate>

    <!-- MoveThumb style. -->
    <Style TargetType="{x:Type controls:MoveThumb}">
        <Setter Property="Height" Value="{StaticResource NodeView_Bevel_Size}" />
        <Setter Property="Width" Value="{StaticResource NodeView_Bevel_Size}" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Cursor" Value="SizeAll" />
        <Setter Property="Foreground" Value="{StaticResource Icon_Foreground_Brush}" />
        <Setter Property="Template" Value="{StaticResource MoveThumbTemplate}" />
    </Style>

    <!-- Connector base style. -->
    <Style x:Key="ConnectorBaseStyle" TargetType="{x:Type controls:AConnector}" >
        <Setter Property="Foreground" Value="{StaticResource Connector_Foreground_Brush}" />
    </Style>
    
    <!-- InputConnector template. -->
    <ControlTemplate x:Key="InputConnectorTemplate" TargetType="{x:Type controls:InputConnector}">
        <Grid >
            <Ellipse Width="20" Height="20" Fill="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
            <Path x:Name="INNER_ConnectorIcon" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True" >
                <Path.Data>
                    <PathGeometry Figures="m 8 0.002163 c 4.41829 0 8 3.5817 8 8.0000002 0 4.4182998 -3.58171 7.9999998 -8 7.9999998 -4.41828 0 -8 -3.5817 -8 -7.9999998 l 0 -0.075 C 0.0393 3.536963 3.60964 0.002163 8 0.002163 z m 0 1.6 c -3.51229 0 -6.36859 2.8128 -6.4 6.3250002 l 0 0.075 c 0 3.5345998 2.86538 6.3999998 6.4 6.3999998 3.15482 0 5.77302 -2.2962 6.3 -5.2999998 l -3 0 0 0.4 c 0 1.3295998 -1.0704 2.3999998 -2.4 2.3999998 l -2.9 0 0 -8 2.9 0 c 1.3296 0 2.4 1.0704 2.4 2.4000002 l 0 0.4 2.975 0 C 13.67823 3.785763 11.0928 1.602163 8 1.602163 z" FillRule="NonZero"/>
                </Path.Data>
            </Path>
        </Grid>
    </ControlTemplate>

    <!-- InputConnector style. -->
    <Style TargetType="{x:Type controls:InputConnector}" BasedOn="{StaticResource ConnectorBaseStyle}">
        <Setter Property="Template" Value="{StaticResource InputConnectorTemplate}" />
    </Style>

    <!-- OutputConnector template. -->
    <ControlTemplate x:Key="OutputConnectorTemplate" TargetType="{x:Type controls:OutputConnector}">
        <Grid>
            <Ellipse Width="20" Height="20" Fill="{TemplateBinding Background}" SnapsToDevicePixels="True"/>
            <Path x:Name="INNER_ConnectorIcon" Fill="{TemplateBinding Foreground}" VerticalAlignment="Center" HorizontalAlignment="Center" SnapsToDevicePixels="True">
                <Path.Data>
                    <PathGeometry Figures="m 8 0.00218 c -4.41828 0 -8 3.58172 -8 8 0 4.41828 3.58172 8 8 8 4.41828 0 8 -3.58172 8 -8 l 0 -0.07496 c -0.03928 -4.390192 -3.609632 -7.925 -8 -7.925 z m 0 1.6 c 3.512288 0 6.368592 2.812848 6.4 6.325 l 0 0.07496 c 0 3.534624 -2.865376 6.4 -6.4 6.4 -3.534624 0 -6.4 -2.865376 -6.4 -6.4 0 -3.534624 2.865376 -6.4 6.4 -6.4 z m -0.9 2.3 c -1.3296 0 -2.4 1.0704 -2.4 2.4 l 0 0.700008 -3.75 0 c -0.31024 0 -0.575 0.199768 -0.575 0.824992 l 0 0.15 c 0 0.625224 0.26476 1.025008 0.575 1.025008 l 3.75 0 0 0.499992 c 0 1.3296 1.0704 2.4 2.4 2.4 l 1.9 0 0 -1.899992 2.35 0 c 0.31024 0 0.55 -0.0568 0.55 -0.500008 0 -0.4432 -0.24376 -0.450336 -0.55 -0.499992 l -2.35 0 0 -2 2.35 0 c 0.31024 0 0.55 -0.0568 0.55 -0.5 0 -0.4432 -0.250504 -0.419056 -0.55 -0.5 l -2.35 0 0 -2.100008 z" FillRule="NonZero"/>
                </Path.Data>
            </Path>
        </Grid>
    </ControlTemplate>

    <!-- OutputConnector style. -->
    <Style TargetType="{x:Type controls:OutputConnector}" BasedOn="{StaticResource ConnectorBaseStyle}">
        <Setter Property="Template" Value="{StaticResource OutputConnectorTemplate}" />
        <Setter Property="Cursor" Value="Cross" />
    </Style>

    <!-- Connection template. -->
    <ControlTemplate x:Key="ConnectionTemplate" TargetType="{x:Type controls:Connection}">
        <Grid>
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="SelectionStates">
                    <VisualStateGroup.Transitions>
                        <VisualTransition GeneratedDuration="0:0:0.3" To="Selected"/>
                        <VisualTransition From="Selected" GeneratedDuration="0:0:0.3"/>
                    </VisualStateGroup.Transitions>
                    <VisualState x:Name="Unselected" />
                    <VisualState x:Name="Selected">
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetName="INNER_SelectionHaloUp" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                            <DoubleAnimation Storyboard.TargetName="INNER_SelectionHaloDown" Storyboard.TargetProperty="(UIElement.Opacity)" To="1" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <controls:ConnectionRenderer x:Name="INNER_Background" From="{Binding RelativeFrom, RelativeSource={RelativeSource TemplatedParent}}" To="{Binding RelativeTo, RelativeSource={RelativeSource TemplatedParent}}" Stroke="Transparent" StrokeThickness="11" />
            <controls:ConnectionRenderer x:Name="INNER_SelectionHaloUp" From="{Binding RelativeFrom, RelativeSource={RelativeSource TemplatedParent}}" To="{Binding RelativeTo, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{StaticResource Selection_Border_Brush}" Opacity="0.0" StrokeDashArray="3 2">
                <controls:ConnectionRenderer.RenderTransform>
                    <TranslateTransform Y="2" />
                </controls:ConnectionRenderer.RenderTransform>
            </controls:ConnectionRenderer>
            <controls:ConnectionRenderer x:Name="INNER_SelectionHaloDown" From="{Binding RelativeFrom, RelativeSource={RelativeSource TemplatedParent}}" To="{Binding RelativeTo, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{StaticResource Selection_Border_Brush}" Opacity="0.0" StrokeDashArray="3 2">
                <controls:ConnectionRenderer.RenderTransform>
                    <TranslateTransform Y="-2" />
                </controls:ConnectionRenderer.RenderTransform>
            </controls:ConnectionRenderer>
            <controls:ConnectionRenderer x:Name="INNER_Connection" From="{Binding RelativeFrom, RelativeSource={RelativeSource TemplatedParent}}" To="{Binding RelativeTo, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{TemplateBinding Background}" />
        </Grid>
    </ControlTemplate>
    
    <!-- Connection style. -->
    <Style TargetType="{x:Type controls:Connection}" BasedOn="{StaticResource {x:Type ContentControl}}">
        <Setter Property="Template" Value="{StaticResource ConnectionTemplate}" />
        <Setter Property="Background" Value="{StaticResource Connection_Background_Brush}" />
    </Style>
    
    <!-- Connecting line template. -->
    <ControlTemplate x:Key="ConnectingLineTemplate" TargetType="{x:Type controls:ConnectingLine}">
        <controls:ConnectionRenderer x:Name="INNER_Line" From="{Binding From, RelativeSource={RelativeSource TemplatedParent}}" To="{Binding To, RelativeSource={RelativeSource TemplatedParent}}" Stroke="{TemplateBinding Background}" StrokeDashArray="3 2" />
    </ControlTemplate>

    <!-- Connecting line style. -->
    <Style TargetType="{x:Type controls:ConnectingLine}">
        <Setter Property="Template" Value="{StaticResource ConnectingLineTemplate}" />
        <Setter Property="Background" Value="{StaticResource ConnectingLine_Background_Brush}" />
    </Style>

    <!-- SelectionBox template. -->
    <ControlTemplate x:Key="SelectionBoxTemplate" TargetType="{x:Type controls:SelectionBox}">
        <Grid x:Name="INNER_MainGrid">
            <Rectangle x:Name="INNER_Border" StrokeDashArray="3 2" StrokeThickness="{TemplateBinding BorderThickness}" Stroke="{TemplateBinding BorderBrush}" />
            <Rectangle x:Name="INNER_Fill" Margin="{TemplateBinding BorderThickness}" Fill="{TemplateBinding Background}" Opacity="0.2"/>
        </Grid>
    </ControlTemplate>

    <!-- SelectionBox style. -->
    <Style TargetType="{x:Type controls:SelectionBox}">
        <Setter Property="Template" Value="{StaticResource SelectionBoxTemplate}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="{StaticResource Selection_Border_Brush}" />
        <Setter Property="Background" Value="{StaticResource Selection_Background_Brush}" />
    </Style>

    <!-- GraphView template. -->
    <ControlTemplate x:Key="GraphViewTemplate" TargetType="{x:Type controls:GraphView}">
        <xzoomandpan:TooledZoomAndPanControl x:Name="PART_ZoomAndPanControl" DataContext="{TemplateBinding DataContext}" 
                                             ContentWidth="{TemplateBinding GraphWidth}" ContentHeight="{TemplateBinding GraphHeight}" 
                                             OverviewHeight="{TemplateBinding OverviewHeight}" OverviewWidth="{TemplateBinding OverviewWidth}" 
                                             OverviewDefaultOpacity="{TemplateBinding OverviewDefaultOpacity}" OverviewVisibility="{TemplateBinding OverviewVisibility}"
                                             ToolbarVisibility="{TemplateBinding ToolbarVisibility}"
                                             ContentScale="{Binding ViewScale, Mode=TwoWay}" ContentOffsetX="{Binding ViewOffsetX, Mode=TwoWay}" ContentOffsetY="{Binding ViewOffsetY, Mode=TwoWay}">
            <controls:SimpleGraphView x:Name="PART_SimpleGraphView" ItemsSource="{Binding Items}" BorderThickness="0" IsReadOnly="{TemplateBinding IsReadOnly}"/>
            <xzoomandpan:TooledZoomAndPanControl.OverviewContent>
                <controls:SimpleGraphView x:Name="PART_Overview" ItemsSource="{Binding Items}" IsReadOnly="true" />
            </xzoomandpan:TooledZoomAndPanControl.OverviewContent>
        </xzoomandpan:TooledZoomAndPanControl>
    </ControlTemplate>

    <!-- SelectionBox style. -->
    <Style TargetType="{x:Type controls:GraphView}">
        <Setter Property="Template" Value="{StaticResource GraphViewTemplate}" />
    </Style>

</ResourceDictionary>